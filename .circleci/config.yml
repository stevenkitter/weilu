# Golang CircleCI 2.0 configuration file
# Author wang xu
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  # build base services 构建底层微服务
  build:
    docker:
      - image: circleci/golang:1.11
      - image: mariadb
        environment:
          MYSQL_ROOT_PASSWORD: "123123"
          MYSQL_ROOT_HOST: "%"
          MYSQL_ALLOW_EMPTY_PASSWORD: "true"
    working_directory: /go/src/github.com/stevenkitter/weilu
    parallelism: 1
    environment:
      WX_API_SERVER_ADDRESS: "http://127.0.0.1:8100"
      WX_SERVER_ADDRESS: 127.0.0.1:51001
      MYSQL_URL: "localhost:3306"
      WX_MYSQL_USER: "wx"
      WX_DATABASE: "wx"
    steps:
      # 构建微服务
      - checkout
      - run: go get -v -t -d ./...
      - run: sudo apt-get update && sudo apt install -y mysql-client
      - run:
          name: Waiting for Mysql to be ready
          command: |
            sh ./wait.sh
      - run:
          name: init mysql
          command: |
            sh ./script_mysql_init/init.sh
      - run:
          name: build services wx to app
          command: |
            cd services/wx
            CGO_ENABLED=0 GOOS=linux go build -o app .
      - run:
          name: run the micro services
          command: |
            cd services/wx
            ./app
          background: true

      # 下面就是构建api的测试
      - run:
          name: build api to image
          command: |
            cd api
            CGO_ENABLED=0 GOOS=linux go build -o app .
      - run:
          name: run api server
          command: |
            cd api
            ./app
          background: true

      #  test all
      - run:
          name: test
          command: |
            sleep 10
            go test -v ./...
      # push to tencent image
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: push services wx to tencent image
          command: |
            cd services/wx
            docker build -t ccr.ccs.tencentyun.com/julu/weilu_wx .
            docker login -u $DOCKER_TENCENT_USER -p $DOCKER_TENCENT_PASSWORD ccr.ccs.tencentyun.com
            docker push ccr.ccs.tencentyun.com/julu/weilu_wx
      - run:
          name: push weilu api to tencent image
          command: |
            cd api
            docker build -t ccr.ccs.tencentyun.com/julu/weilu_api .
            docker login -u $DOCKER_TENCENT_USER -p $DOCKER_TENCENT_PASSWORD ccr.ccs.tencentyun.com
            docker push ccr.ccs.tencentyun.com/julu/weilu_api

  deploy:
    machine:
      enable: true
    working_directory: ~/julu
    environment:
      JULU_PATH: "/home/ubuntu/production/julu"
      WEILU_API_PATH: "/home/ubuntu/production/weilu/weilu_api"
    steps:
      - checkout
      - run:
          name: Deploy over ssh
          command: |
            ls
            scp docker-compose.yml $SSH_USER@$SSH_HOST:$JULU_PATH
            scp deploy.sh $SSH_USER@$SSH_HOST:$JULU_PATH
            ssh $SSH_USER@$SSH_HOST "export WX_MYSQL_PASSWORD=${WX_MYSQL_PASSWORD} && cd $JULU_PATH && sh deploy.sh"
      - run:
          name: Deploy api ssh
          command: |
            ls
            scp ./api/docker-compose.yml $SSH_USER@$SSH_HOST:$WEILU_API_PATH
            scp ./api/deploy.sh $SSH_USER@$SSH_HOST:$WEILU_API_PATH
            ssh $SSH_USER@$SSH_HOST "export DOCKER_TENCENT_USER=${DOCKER_TENCENT_USER} && export DOCKER_TENCENT_PASSWORD=${DOCKER_TENCENT_PASSWORD} && cd $WEILU_API_PATH && sh deploy.sh"
workflows:
  version: 2
  build_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
